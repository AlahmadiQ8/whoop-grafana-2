/*
 * WHOOP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Whoop.Sdk.Client.OpenAPIDateConverter;

namespace Whoop.Sdk.Model
{
    /// <summary>
    /// PaginatedCycleResponse
    /// </summary>
    [DataContract(Name = "PaginatedCycleResponse")]
    public partial class PaginatedCycleResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaginatedCycleResponse" /> class.
        /// </summary>
        /// <param name="records">The collection of records in this page..</param>
        /// <param name="nextToken">A token that can be used on the next request to access the next page of records. If the token is not present, there are no more records in the collection..</param>
        public PaginatedCycleResponse(List<Cycle> records = default(List<Cycle>), string nextToken = default(string))
        {
            this.Records = records;
            this.NextToken = nextToken;
        }

        /// <summary>
        /// The collection of records in this page.
        /// </summary>
        /// <value>The collection of records in this page.</value>
        [DataMember(Name = "records", EmitDefaultValue = false)]
        public List<Cycle> Records { get; set; }

        /// <summary>
        /// A token that can be used on the next request to access the next page of records. If the token is not present, there are no more records in the collection.
        /// </summary>
        /// <value>A token that can be used on the next request to access the next page of records. If the token is not present, there are no more records in the collection.</value>
        /// <example>MTIzOjEyMzEyMw</example>
        [DataMember(Name = "next_token", EmitDefaultValue = true)]
        public string NextToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaginatedCycleResponse {\n");
            sb.Append("  Records: ").Append(Records).Append("\n");
            sb.Append("  NextToken: ").Append(NextToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
