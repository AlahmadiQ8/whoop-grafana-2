/*
 * WHOOP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Whoop.Sdk.Client.OpenAPIDateConverter;

namespace Whoop.Sdk.Model
{
    /// <summary>
    /// Breakdown of the amount of sleep a user needed before the sleep activity. Summing all individual components results in the amount of sleep the user needed prior to this sleep activity
    /// </summary>
    [DataContract(Name = "SleepNeeded")]
    public partial class SleepNeeded : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SleepNeeded" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SleepNeeded() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SleepNeeded" /> class.
        /// </summary>
        /// <param name="baselineMilli">The amount of sleep a user needed based on historical trends (required).</param>
        /// <param name="needFromSleepDebtMilli">The difference between the amount of sleep the user&#39;s body required and the amount the user actually got (required).</param>
        /// <param name="needFromRecentStrainMilli">Additional sleep need accrued based on the user&#39;s strain (required).</param>
        /// <param name="needFromRecentNapMilli">Reduction in sleep need accrued based on the user&#39;s recent nap activity (negative value or zero) (required).</param>
        public SleepNeeded(long baselineMilli = default(long), long needFromSleepDebtMilli = default(long), long needFromRecentStrainMilli = default(long), long needFromRecentNapMilli = default(long))
        {
            this.BaselineMilli = baselineMilli;
            this.NeedFromSleepDebtMilli = needFromSleepDebtMilli;
            this.NeedFromRecentStrainMilli = needFromRecentStrainMilli;
            this.NeedFromRecentNapMilli = needFromRecentNapMilli;
        }

        /// <summary>
        /// The amount of sleep a user needed based on historical trends
        /// </summary>
        /// <value>The amount of sleep a user needed based on historical trends</value>
        /// <example>27395716</example>
        [DataMember(Name = "baseline_milli", IsRequired = true, EmitDefaultValue = true)]
        public long BaselineMilli { get; set; }

        /// <summary>
        /// The difference between the amount of sleep the user&#39;s body required and the amount the user actually got
        /// </summary>
        /// <value>The difference between the amount of sleep the user&#39;s body required and the amount the user actually got</value>
        /// <example>352230</example>
        [DataMember(Name = "need_from_sleep_debt_milli", IsRequired = true, EmitDefaultValue = true)]
        public long NeedFromSleepDebtMilli { get; set; }

        /// <summary>
        /// Additional sleep need accrued based on the user&#39;s strain
        /// </summary>
        /// <value>Additional sleep need accrued based on the user&#39;s strain</value>
        /// <example>208595</example>
        [DataMember(Name = "need_from_recent_strain_milli", IsRequired = true, EmitDefaultValue = true)]
        public long NeedFromRecentStrainMilli { get; set; }

        /// <summary>
        /// Reduction in sleep need accrued based on the user&#39;s recent nap activity (negative value or zero)
        /// </summary>
        /// <value>Reduction in sleep need accrued based on the user&#39;s recent nap activity (negative value or zero)</value>
        /// <example>-12312</example>
        [DataMember(Name = "need_from_recent_nap_milli", IsRequired = true, EmitDefaultValue = true)]
        public long NeedFromRecentNapMilli { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SleepNeeded {\n");
            sb.Append("  BaselineMilli: ").Append(BaselineMilli).Append("\n");
            sb.Append("  NeedFromSleepDebtMilli: ").Append(NeedFromSleepDebtMilli).Append("\n");
            sb.Append("  NeedFromRecentStrainMilli: ").Append(NeedFromRecentStrainMilli).Append("\n");
            sb.Append("  NeedFromRecentNapMilli: ").Append(NeedFromRecentNapMilli).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
